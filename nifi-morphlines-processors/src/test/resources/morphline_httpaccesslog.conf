morphlines : [
  {
    id : morphline1
    # need all commands
    importCommands : [
      "org.kitesdk.morphline.stdio.ReadLineBuilder",
      "org.kitesdk.morphline.stdlib.TryRulesBuilder",
      "org.kitesdk.morphline.stdlib.GrokBuilder",
      "org.kitesdk.morphline.stdlib.SplitBuilder",
      "org.kitesdk.morphline.stdlib.ConvertTimestampBuilder",
      "org.kitesdk.morphline.stdlib.SetValuesBuilder",
      "org.kitesdk.morphline.stdlib.LogInfoBuilder",
    ]

    commands : [
      {
        readLine {
          charset : UTF-8
        }
      }
      # { logInfo { format : "output record: {}", args : ["@{message}"] } }
      {
        tryRules {
          catchExceptions : true
          rules : [
            # first try
            {
              commands : [
                {
                  grok {
                    dictionaryResources : [grok-dictionaries/grok-patterns, grok-dictionaries/linux-syslog, grok-dictionaries/linux-syslog1]
                    expressions : {
                      message : """%{COMBINEDAPACHELOG}"""
                    }
                  }
                }

                {
                  setValues {
                    key : "@{clientip}"
                    value : "@{timestamp},@{clientip},@{request},@{response},@{agent}"
                  }
                }
              ]
            }

            # oops. Exception Record.
            {
              commands : [
                {
                  setValues {
                    key : "@{exceptionkey}"
                    value : "@{message}"
                  }
                }
              ]
            }
          ]
        }
      }
    ]
  }
]